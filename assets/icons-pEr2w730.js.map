{"version":3,"file":"icons-pEr2w730.js","sources":["../../../src/components/common/groupBy.tsx","../../../src/pages/icons.tsx"],"sourcesContent":["export function groupBy<T, K extends keyof T>(\n  arr: T[],\n  key: K,\n): Record<string, T[]> {\n  return arr.reduce(\n    (grouped, item) => {\n      const groupValue = item[key];\n      const groupKey = String(groupValue); // Ensure the key is a string\n      grouped[groupKey] = grouped[groupKey] || [];\n      grouped[groupKey].push(item);\n      return grouped;\n    },\n    {} as Record<string, T[]>,\n  );\n}\n","import { groupBy } from \"../components/common/groupBy\";\nimport { Icon, IconThemes } from \"../components/icons\";\nimport { IconList } from \"../components/icons/IconList\";\n\nexport default function Icons() {\n  const list = groupBy(IconList, \"name\");\n\n  return (\n    <>\n      <h1 className=\"text-2xl font-bold\">Icons</h1>\n      <div>\n        <div className=\"text-lg\">\n          This page is for testing the icons. The icons are grouped by name and\n          theme. The icons are from the{\" \"}\n          <a\n            href=\"https://react-icons.github.io/react-icons/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-blue-500 underline\"\n          >\n            react-icons\n          </a>{\" \"}\n          library.\n        </div>\n        <div className=\"text-lg\">\n          My code for making the icons dynamic for use to change icon themes.\n        </div>\n        <div className=\"text-xl font-bold mt-4\">Icon List</div>\n        <pre\n          data-theme=\"light\"\n          className=\"font-mono text-sm bg-gray-100 p-4 rounded-sm border border-slate-300 shadow-md\"\n        >\n          <code>\n            {`export const IconList: $Icon[] = [\n  { name: \"User\", theme: IconTheme.antd, component: AI.AiOutlineUser },\n  { name: \"User\", theme: IconTheme.bi, component: BI.BiUser },\n  { name: \"User\", theme: IconTheme.fc, component: FC.FcBusinessman },\n\n  { name: \"Tools\", theme: IconTheme.antd, component: AI.AiFillTool },\n  { name: \"Tools\", theme: IconTheme.bi, component: BS.BsTools },\n  { name: \"Tools\", theme: IconTheme.fc, component: RI.RiToolsFill },\n];`}\n          </code>\n        </pre>\n        <div className=\"text-xl font-bold mt-4\">Icon Component</div>\n        <pre\n          data-theme=\"light\"\n          className=\"font-mono text-sm bg-gray-100 p-4 rounded-sm border border-slate-300 shadow-md\"\n        >\n          <code>\n            {`const getIcon = ({ theme, name }: $Props) => {\n  const newIcon = IconList.find(\n    (item) => item.name === name && item.theme === theme,\n  );\n  if (newIcon && newIcon.component) {\n    return <newIcon.component />;\n  }\n  return null;\n};\n\nexport const Icon = (props: $Props) => {\n  const icon = getIcon(props);\n  return icon && <span>{icon}</span>;\n};`}\n          </code>\n        </pre>\n      </div>\n      <div className=\"text-xl font-bold mt-4\">Usage</div>\n      <pre\n        data-theme=\"light\"\n        className=\"font-mono text-sm bg-gray-100 p-4 rounded-sm border border-slate-300 shadow-md\"\n      >\n        <code>{`const { iconTheme } = useAppContext();\nreturn (<Icon name=\"Moon\" theme={iconTheme} />)`}</code>\n      </pre>\n\n      <div className=\"mt-4\">\n        <div className=\"grid grid-cols-4 gap-4 text-xl\">\n          <div>&nbsp;</div>\n          {IconThemes.map((theme) => (\n            <div key={theme.label} className=\"font-bold\">\n              {theme.label}\n            </div>\n          ))}\n        </div>\n\n        {Object.values(list).map((group) => (\n          <div\n            className=\"grid grid-cols-4 gap-4 text-xl border-b-1 border-gray-300 p-4\"\n            key={group[0].name}\n          >\n            <div className=\"font-bold\">{group[0].name}</div>\n            {group.map((icon) => (\n              <div>\n                <Icon name={icon.name} theme={icon.theme} />\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n"],"names":["groupBy","arr","key","grouped","item","groupValue","groupKey","icons","_withComponentProps","list","IconList","jsxs","Fragment","children","jsx","className","href","target","rel","IconThemes","map","theme","label","Object","values","group","name","icon","Icon"],"mappings":"oJAAgB,SAAAA,EACdC,EACAC,EACqB,CACrB,OAAOD,EAAI,OACT,CAACE,EAASC,IAAS,CACX,MAAAC,EAAaD,EAAKF,CAAG,EACrBI,EAAW,OAAOD,CAAU,EAClC,OAAAF,EAAQG,CAAQ,EAAIH,EAAQG,CAAQ,GAAK,CAAC,EAClCH,EAAAG,CAAQ,EAAE,KAAKF,CAAI,EACpBD,CACT,EACA,CAAA,CACF,CACF,CCVA,MAAAI,EAAAC,EAAA,UAAgC,CACxB,MAAAC,EAAOT,EAAQU,EAAU,MAAM,EAErC,OAEIC,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAA,CAACC,EAAA,IAAA,KAAA,CAAGC,UAAU,qBAAqBF,SAAK,OAAA,CAAA,SACvC,MACC,CAAAA,SAAA,CAACF,EAAA,KAAA,MAAA,CAAII,UAAU,UAAUF,SAAA,CAAA,sGAEO,IAC9BC,EAAAA,IAAC,IAAA,CACCE,KAAK,6CACLC,OAAO,SACPC,IAAI,sBACJH,UAAU,0BACXF,SAAA,aAAA,CAED,EAAK,IAAI,UAAA,CAEX,CAAA,EACCC,EAAA,IAAA,MAAA,CAAIC,UAAU,UAAUF,SAEzB,qEAAA,CAAA,EACCC,EAAA,IAAA,MAAA,CAAIC,UAAU,yBAAyBF,SAAS,WAAA,CAAA,EACjDC,EAAA,IAAC,MAAA,CACC,aAAW,QACXC,UAAU,iFAEVF,eAAC,OACE,CAAAA,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASH,CAAA,CAAA,CACF,EACCC,EAAA,IAAA,MAAA,CAAIC,UAAU,yBAAyBF,SAAc,gBAAA,CAAA,EACtDC,EAAA,IAAC,MAAA,CACC,aAAW,QACXC,UAAU,iFAEVF,eAAC,OACE,CAAAA,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAcH,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACCC,EAAA,IAAA,MAAA,CAAIC,UAAU,yBAAyBF,SAAK,OAAA,CAAA,EAC7CC,EAAA,IAAC,MAAA,CACC,aAAW,QACXC,UAAU,iFAEVF,eAAC,OAAM,CAAAA,SAAA;AAAA,gDACkC,CAAA,CAAA,CAC3C,EAEAF,EAAA,KAAC,MAAI,CAAAI,UAAU,OACbF,SAAA,CAACF,EAAA,KAAA,MAAA,CAAII,UAAU,iCACbF,SAAA,CAAAC,EAAA,IAAC,OAAID,SAAM,GAAA,CAAA,EACVM,EAAWC,IAAKC,GACdP,EAAAA,IAAA,MAAA,CAAsBC,UAAU,YAC9BF,SAAMQ,EAAAC,KAAA,EADCD,EAAMC,KAEhB,CACD,CAAA,CACH,CAAA,EAECC,OAAOC,OAAOf,CAAI,EAAEW,IAAKK,GACxBd,EAAA,KAAC,MAAA,CACCI,UAAU,gEAGVF,SAAA,CAAAC,EAAA,IAAC,OAAIC,UAAU,YAAaF,SAAMY,EAAA,CAAC,EAAEC,IAAK,CAAA,EACzCD,EAAML,IAAKO,SACT,MACC,CAAAd,SAAAC,EAAA,IAACc,EAAK,CAAAF,KAAMC,EAAKD,KAAML,MAAOM,EAAKN,KAAO,CAAA,EAC5C,CACD,CAAA,CAAA,EAPII,EAAM,CAAC,EAAEC,IAQhB,CACD,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CAEJ,CAAA"}